import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import matplotlib.ticker as ticker

# Read the Excel file
file_path = r"File Path"
df = pd.read_excel(file_path, sheet_name="Tabelle1")

# Create a figure with three subplots side by side
fig, (ax1, ax2, ax3) = plt.subplots(1, 3, figsize=(18, 8))

# Prepare data for box plots
# Group data by COR value
cor_groups = df.groupby('COR')

# Lists to store data for each COR value
sty_data = []
c_conv_loop_data = []
cor_reaktor_in_means = []  # Will store mean values

# Get unique COR values and sort them
cor_values = sorted(df['COR'].unique())

# Prepare data for each COR value
for cor in cor_values:
    group = cor_groups.get_group(cor)
    sty_data.append(group['STY (kg/kg/h)'].values)
    c_conv_loop_data.append(group['C-Conv-Loop'].values)
    # Calculate mean of "COR Reaktor in" for each COR value
    cor_reaktor_in_means.append([group['COR Reaktor in'].mean()])

# 1. Create box plot for STY values
ax1.boxplot(sty_data, labels=cor_values)
ax1.set_xlabel('COR', fontsize=14)
ax1.set_ylabel('STY (kg/kg/h)', fontsize=14)
ax1.set_title('Space Time Yield vs. COR', fontsize=16)
ax1.grid(True, linestyle='--', alpha=0.7)
ax1.tick_params(axis='both', labelsize=12, colors='black')

# 2. Create box plot for C-Conv-Loop values
ax2.boxplot(c_conv_loop_data, labels=cor_values)
ax2.set_xlabel('COR', fontsize=14)
ax2.set_ylabel('C-Conv-Loop', fontsize=14)
ax2.set_title('Carbon Conversion Loop vs. COR', fontsize=16)
ax2.grid(True, linestyle='--', alpha=0.7)
ax2.tick_params(axis='both', labelsize=12, colors='black')

# 3. Create box plot for mean COR Reaktor in values
ax3.boxplot(cor_reaktor_in_means, labels=cor_values)
ax3.set_xlabel('COR', fontsize=14)
ax3.set_ylabel('COR Reaktor in (Average)', fontsize=14)
ax3.set_title('Average COR Reaktor in vs. COR', fontsize=16)
ax3.grid(True, linestyle='--', alpha=0.7)
ax3.tick_params(axis='both', labelsize=12, colors='black')

# Set y-axis to start from 0 for all plots
ax1.set_ylim(bottom=0)
ax2.set_ylim(bottom=0)
ax3.set_ylim(bottom=0)

# Thicken the frame and spines
for ax in [ax1, ax2, ax3]:
    for spine in ax.spines.values():
        spine.set_linewidth(2)
        spine.set_color('black')

# Adjust layout
plt.tight_layout()

# Show the plot
plt.show()

# Optionally save the figure
# plt.savefig('cor_box_plots.png', dpi=300, bbox_inches='tight')
